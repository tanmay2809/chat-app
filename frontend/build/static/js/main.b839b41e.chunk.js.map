{"version":3,"sources":["Context/ChatProvider.js","components/Authentication/Login.js","components/Authentication/Signup.js","Pages/Homepage.js","components/SingleChat.js","config/ChatLogics.js","components/miscellaneous/ProfileModal.js","components/ScrollableChat.js","components/userAvatar/UserBadgeItem.js","components/userAvatar/UserListItem.js","components/miscellaneous/UpdateGroupChatModal.js","components/Chatbox.js","components/ChatLoading.js","components/miscellaneous/GroupChatModal.js","components/MyChats.js","components/miscellaneous/SideDrawer.js","Pages/Chatpage.js","App.js","reportWebVitals.js","index.js"],"names":["ChatContext","createContext","ChatState","useContext","ChatProvider","_ref","children","_useState","useState","_useState2","_slicedToArray","selectedChat","setSelectedChat","_useState3","_useState4","user","setUser","_useState5","_useState6","notification","setNotification","_useState7","_useState8","chats","setChats","history","useHistory","useEffect","userInfo","JSON","parse","localStorage","getItem","push","_jsx","Provider","value","Login","show","setShow","toast","useToast","email","setEmail","password","setPassword","loading","setLoading","submitHandler","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","_yield$axios$post","data","wrap","_context","prev","next","title","status","duration","isClosable","position","abrupt","headers","axios","post","sent","setItem","stringify","t0","description","response","message","stop","apply","arguments","_jsxs","VStack","spacing","FormControl","id","isRequired","FormLabel","Input","type","placeholder","onChange","e","target","InputGroup","size","InputRightElement","width","Button","h","onClick","colorScheme","style","marginTop","isLoading","variant","Signup","handleClick","name","setName","confirmpassword","setConfirmpassword","_useState9","_useState10","_useState11","_useState12","pic","setPic","_useState13","_useState14","picLoading","setPicLoading","console","log","postDetails","_ref2","_callee2","pics","_context2","undefined","FormData","append","onUploadProgress","ProgressEvent","then","_ref3","secure_url","toString","url","result","catch","err","_x","p","accept","files","Homepage","socket","selectedChatCompare","Container","maxW","centerContent","Box","d","justifyContent","bg","w","m","borderRadius","borderWidth","Text","fontSize","fontFamily","Tabs","isFitted","TabList","mb","Tab","TabPanels","TabPanel","isSameSenderMargin","messages","i","userId","length","sender","_id","isSameSender","isLastMessage","isSameUser","getSender","loggedUser","users","_users$","ProfileModal","_useDisclosure","useDisclosure","isOpen","onOpen","onClose","_Fragment","IconButton","base","icon","ViewIcon","Modal","isCentered","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","flexDir","alignItems","Image","boxSize","src","alt","md","ModalFooter","ScrollableChat","ScrollableFeed","map","display","Tooltip","label","placement","hasArrow","Avatar","mt","mr","cursor","backgroundColor","concat","marginLeft","padding","maxWidth","content","UserBadgeItem","handleFunction","admin","Badge","px","py","CloseIcon","pl","UserListItem","_hover","background","color","UpdateGroupChatModal","fetchMessages","fetchAgain","setFetchAgain","groupChatName","setGroupChatName","search","setSearch","searchResult","setSearchResult","renameloading","setRenameLoading","_ChatState","handleSearch","query","_yield$axios$get","Authorization","token","get","handleRename","_yield$axios$put","put","chatId","chatName","handleAddUser","_ref4","_callee3","user1","_yield$axios$put2","_context3","find","u","groupAdmin","_x2","handleRemove","_ref5","_callee4","_yield$axios$put3","_context4","_x3","flexWrap","pb","ml","Spinner","SingleChat","setMessages","newMessage","setNewMessage","socketConnected","setSocketConnected","typing","setTyping","istyping","setIsTyping","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","emit","sendMessage","event","key","_toConsumableArray","io","on","newMessageRecieved","chat","includes","ArrowBackIcon","isGroupChat","toUpperCase","overflowY","alignSelf","margin","className","onKeyDown","Lottie","options","marginBottom","lastTypingTime","Date","getTime","setTimeout","Chatbox","ChatLoading","Stack","Skeleton","height","GroupChatModal","selectedUsers","setSelectedUsers","handleSubmit","delUser","filter","sel","slice","userToAdd","MyChats","setLoggedUser","fetchChats","lg","rightIcon","AddIcon","latestMessage","substring","SideDrawer","loadingChat","setLoadingChat","accessChat","c","Menu","MenuButton","NotificationBadge","count","effect","Effect","SCALE","BellIcon","MenuList","notif","MenuItem","n","as","ChevronDownIcon","MenuDivider","removeItem","Drawer","DrawerOverlay","DrawerContent","DrawerHeader","borderBottomWidth","DrawerBody","Chatpage","App","Route","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","ChakraProvider","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.b839b41e.chunk.js","sourcesContent":["import React, { createContext, useContext, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nconst ChatContext = createContext();\n\nconst ChatProvider = ({ children }) => {\n  const [selectedChat, setSelectedChat] = useState();\n  const [user, setUser] = useState();\n  const [notification, setNotification] = useState([]);\n  const [chats, setChats] = useState();\n\n  const history = useHistory();\n\n  useEffect(() => {\n    const userInfo = JSON.parse(localStorage.getItem(\"userInfo\"));\n    setUser(userInfo);\n\n    if (!userInfo) history.push(\"/\");\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [history]);\n\n  return (\n    <ChatContext.Provider\n      value={{\n        selectedChat,\n        setSelectedChat,\n        user,\n        setUser,\n        notification,\n        setNotification,\n        chats,\n        setChats,\n      }}\n    >\n      {children}\n    </ChatContext.Provider>\n  );\n};\n\nexport const ChatState = () => {\n  return useContext(ChatContext);\n};\n\nexport default ChatProvider;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nconst Login = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [loading, setLoading] = useState(false);\n\n  const history = useHistory();\n  const { setUser } = ChatState();\n\n  const submitHandler = async () => {\n    setLoading(true);\n    if (!email || !password) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n\n      const { data } = await axios.post(\n        \"/api/user/login\",\n        { email, password },\n        config\n      );\n\n      toast({\n        title: \"Login Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setUser(data);\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n  };\n\n  return (\n    <VStack spacing=\"10px\">\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          value={email}\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter password\"\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={loading}\n      >\n        Login\n      </Button>\n      <Button\n        variant=\"solid\"\n        colorScheme=\"red\"\n        width=\"100%\"\n        onClick={() => {\n          setEmail(\"guest@example.com\");\n          setPassword(\"123456\");\n        }}\n      >\n        Get Guest User Credentials\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Login;\n","import { Button } from \"@chakra-ui/button\";\nimport { FormControl, FormLabel } from \"@chakra-ui/form-control\";\nimport { Input, InputGroup, InputRightElement } from \"@chakra-ui/input\";\nimport { VStack } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Signup = () => {\n  const [show, setShow] = useState(false);\n  const handleClick = () => setShow(!show);\n  const toast = useToast();\n  const history = useHistory();\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [confirmpassword, setConfirmpassword] = useState();\n  const [password, setPassword] = useState();\n  const [pic, setPic] = useState();\n  const [picLoading, setPicLoading] = useState(false);\n\n  const submitHandler = async () => {\n    setPicLoading(true);\n    if (!name || !email || !password || !confirmpassword) {\n      toast({\n        title: \"Please Fill all the Feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n    if (password !== confirmpassword) {\n      toast({\n        title: \"Passwords Do Not Match\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    console.log(name, email, password, pic);\n    try {\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"/api/user\",\n        {\n          name,\n          email,\n          password,\n          pic,\n        },\n        config\n      );\n      console.log(data);\n      toast({\n        title: \"Registration Successful\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setPicLoading(false);\n      history.push(\"/chats\");\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n    }\n  };\n\n  // const postDetails = (pics) => {\n  //   setPicLoading(true);\n  //   if (pics === undefined) {\n  //     toast({\n  //       title: \"Please Select an Image!\",\n  //       status: \"warning\",\n  //       duration: 5000,\n  //       isClosable: true,\n  //       position: \"bottom\",\n  //     });\n  //     return;\n  //   }\n  //   console.log(pics);\n  //   if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n  //     const data = new FormData();\n  //     data.append(\"file\", pics);\n  //     data.append(\"upload_preset\", \"chat-app\");\n  //     data.append(\"cloud_name\", \"piyushproj\");\n  //     fetch(\"https://api.cloudinary.com/v1_1/piyushproj/image/upload\", {\n  //       method: \"post\",\n  //       body: data,\n  //     })\n  //       .then((res) => res.json())\n  //       .then((data) => {\n  //         setPic(data.url.toString());\n  //         console.log(data.url.toString());\n  //         setPicLoading(false);\n  //       })\n  //       .catch((err) => {\n  //         console.log(err);\n  //         setPicLoading(false);\n  //       });\n  //   } else {\n  //     toast({\n  //       title: \"Please Select an Image!\",\n  //       status: \"warning\",\n  //       duration: 5000,\n  //       isClosable: true,\n  //       position: \"bottom\",\n  //     });\n  //     setPicLoading(false);\n  //     return;\n  //   }\n  // };\n  const postDetails = async (pics) => {\n    setPicLoading(true);\n    if (pics === undefined) {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n    let result;\n    console.log(pics);\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"chat_app\");\n\n      return (\n        axios\n          .post(\n            `https://api.cloudinary.com/v1_1/dqclqq2jy/image/upload/`,\n            data,\n            {\n              onUploadProgress: (ProgressEvent) => {},\n            }\n          )\n          //.then((res) => res.json())\n\n          .then(({ data }) => {\n            data.secure_url = \"\" + data.secure_url;\n            setPic(data.secure_url.toString());\n            console.log(data.url.toString());\n            console.log(\"UPLOAD COMLETE: \" + JSON.stringify(result));\n\n            setPicLoading(false);\n          })\n          .catch((err) => {\n            console.log(err);\n            setPicLoading(false);\n          })\n      );\n    } else {\n      toast({\n        title: \"Please Select an Image!\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setPicLoading(false);\n      return;\n    }\n  };\n\n  return (\n    <VStack spacing=\"5px\">\n      <FormControl id=\"first-name\" isRequired>\n        <FormLabel>Name</FormLabel>\n        <Input\n          placeholder=\"Enter Your Name\"\n          onChange={(e) => setName(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"email\" isRequired>\n        <FormLabel>Email Address</FormLabel>\n        <Input\n          type=\"email\"\n          placeholder=\"Enter Your Email Address\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Enter Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"password\" isRequired>\n        <FormLabel>Confirm Password</FormLabel>\n        <InputGroup size=\"md\">\n          <Input\n            type={show ? \"text\" : \"password\"}\n            placeholder=\"Confirm password\"\n            onChange={(e) => setConfirmpassword(e.target.value)}\n          />\n          <InputRightElement width=\"4.5rem\">\n            <Button h=\"1.75rem\" size=\"sm\" onClick={handleClick}>\n              {show ? \"Hide\" : \"Show\"}\n            </Button>\n          </InputRightElement>\n        </InputGroup>\n      </FormControl>\n      <FormControl id=\"pic\">\n        <FormLabel>Upload your Picture</FormLabel>\n        <Input\n          type=\"file\"\n          p={1.5}\n          accept=\"image/*\"\n          onChange={(e) => postDetails(e.target.files[0])}\n        />\n      </FormControl>\n      <Button\n        colorScheme=\"blue\"\n        width=\"100%\"\n        style={{ marginTop: 15 }}\n        onClick={submitHandler}\n        isLoading={picLoading}\n      >\n        Sign Up\n      </Button>\n    </VStack>\n  );\n};\n\nexport default Signup;\n","import {\n  Box,\n  Container,\n  Tab,\n  TabList,\n  TabPanel,\n  TabPanels,\n  Tabs,\n  Text,\n} from \"@chakra-ui/react\";\nimport { useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport Login from \"../components/Authentication/Login\";\nimport Signup from \"../components/Authentication/Signup\";\n\nfunction Homepage() {\n  const history = useHistory();\n\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"userInfo\"));\n\n    if (user) history.push(\"/chats\");\n  }, [history]);\n\n  return (\n    <Container maxW=\"xl\" centerContent>\n      <Box\n        d=\"flex\"\n        justifyContent=\"center\"\n        p={3}\n        bg=\"white\"\n        w=\"100%\"\n        m=\"40px 0 15px 0\"\n        borderRadius=\"lg\"\n        borderWidth=\"1px\"\n      >\n        <Text fontSize=\"4xl\" fontFamily=\"Work sans\">\n          Connectify\n        </Text>\n      </Box>\n      <Box bg=\"white\" w=\"100%\" p={4} borderRadius=\"lg\" borderWidth=\"1px\">\n        <Tabs isFitted variant=\"soft-rounded\">\n          <TabList mb=\"1em\">\n            <Tab>Login</Tab>\n            <Tab>Sign Up</Tab>\n          </TabList>\n          <TabPanels>\n            <TabPanel>\n              <Login />\n            </TabPanel>\n            <TabPanel>\n              <Signup />\n            </TabPanel>\n          </TabPanels>\n        </Tabs>\n      </Box>\n    </Container>\n  );\n}\n\nexport default Homepage;\n","import { FormControl } from \"@chakra-ui/form-control\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport { IconButton, Spinner, useToast } from \"@chakra-ui/react\";\nimport { getSender, getSenderFull } from \"../config/ChatLogics\";\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { ArrowBackIcon } from \"@chakra-ui/icons\";\nimport ProfileModal from \"./miscellaneous/ProfileModal\";\nimport ScrollableChat from \"./ScrollableChat\";\nimport Lottie from \"react-lottie\";\nimport animationData from \"../animations/typing.json\";\n\nimport io from \"socket.io-client\";\nimport UpdateGroupChatModal from \"./miscellaneous/UpdateGroupChatModal\";\nimport { ChatState } from \"../Context/ChatProvider\";\nconst ENDPOINT = \"http://localhost:5000\"; // \"https://talk-a-tive.herokuapp.com\"; -> After deployment\nvar socket, selectedChatCompare;\n\nconst SingleChat = ({ fetchAgain, setFetchAgain }) => {\n  const [messages, setMessages] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const [socketConnected, setSocketConnected] = useState(false);\n  const [typing, setTyping] = useState(false);\n  const [istyping, setIsTyping] = useState(false);\n  const toast = useToast();\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: \"xMidYMid slice\",\n    },\n  };\n  const { selectedChat, setSelectedChat, user, notification, setNotification } =\n    ChatState();\n\n  const fetchMessages = async () => {\n    if (!selectedChat) return;\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      setLoading(true);\n\n      const { data } = await axios.get(\n        `/api/message/${selectedChat._id}`,\n        config\n      );\n      setMessages(data);\n      setLoading(false);\n\n      socket.emit(\"join chat\", selectedChat._id);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Messages\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  const sendMessage = async (event) => {\n    if (event.key === \"Enter\" && newMessage) {\n      socket.emit(\"stop typing\", selectedChat._id);\n      try {\n        const config = {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        setNewMessage(\"\");\n        const { data } = await axios.post(\n          \"/api/message\",\n          {\n            content: newMessage,\n            chatId: selectedChat,\n          },\n          config\n        );\n        socket.emit(\"new message\", data);\n        setMessages([...messages, data]);\n      } catch (error) {\n        toast({\n          title: \"Error Occured!\",\n          description: \"Failed to send the Message\",\n          status: \"error\",\n          duration: 5000,\n          isClosable: true,\n          position: \"bottom\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    socket.emit(\"setup\", user);\n    socket.on(\"connected\", () => setSocketConnected(true));\n    socket.on(\"typing\", () => setIsTyping(true));\n    socket.on(\"stop typing\", () => setIsTyping(false));\n\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    fetchMessages();\n\n    selectedChatCompare = selectedChat;\n    // eslint-disable-next-line\n  }, [selectedChat]);\n\n  useEffect(() => {\n    socket.on(\"message recieved\", (newMessageRecieved) => {\n      if (\n        !selectedChatCompare || // if chat is not selected or doesn't match current chat\n        selectedChatCompare._id !== newMessageRecieved.chat._id\n      ) {\n        if (!notification.includes(newMessageRecieved)) {\n          setNotification([newMessageRecieved, ...notification]);\n          setFetchAgain(!fetchAgain);\n        }\n      } else {\n        setMessages([...messages, newMessageRecieved]);\n      }\n    });\n  });\n\n  const typingHandler = (e) => {\n    setNewMessage(e.target.value);\n\n    if (!socketConnected) return;\n\n    if (!typing) {\n      setTyping(true);\n      socket.emit(\"typing\", selectedChat._id);\n    }\n    let lastTypingTime = new Date().getTime();\n    var timerLength = 3000;\n    setTimeout(() => {\n      var timeNow = new Date().getTime();\n      var timeDiff = timeNow - lastTypingTime;\n      if (timeDiff >= timerLength && typing) {\n        socket.emit(\"stop typing\", selectedChat._id);\n        setTyping(false);\n      }\n    }, timerLength);\n  };\n\n  return (\n    <>\n      {selectedChat ? (\n        <>\n          <Text\n            fontSize={{ base: \"28px\", md: \"30px\" }}\n            pb={3}\n            px={2}\n            w=\"100%\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent={{ base: \"space-between\" }}\n            alignItems=\"center\"\n          >\n            <IconButton\n              d={{ base: \"flex\", md: \"none\" }}\n              icon={<ArrowBackIcon />}\n              onClick={() => setSelectedChat(\"\")}\n            />\n            {messages &&\n              (!selectedChat.isGroupChat ? (\n                <>\n                  {getSender(user, selectedChat.users)}\n                  <ProfileModal\n                    user={getSenderFull(user, selectedChat.users)}\n                  />\n                </>\n              ) : (\n                <>\n                  {selectedChat.chatName.toUpperCase()}\n                  <UpdateGroupChatModal\n                    fetchMessages={fetchMessages}\n                    fetchAgain={fetchAgain}\n                    setFetchAgain={setFetchAgain}\n                  />\n                </>\n              ))}\n          </Text>\n          <Box\n            d=\"flex\"\n            flexDir=\"column\"\n            justifyContent=\"flex-end\"\n            p={3}\n            bg=\"#E8E8E8\"\n            w=\"100%\"\n            h=\"100%\"\n            borderRadius=\"lg\"\n            overflowY=\"hidden\"\n          >\n            {loading ? (\n              <Spinner\n                size=\"xl\"\n                w={20}\n                h={20}\n                alignSelf=\"center\"\n                margin=\"auto\"\n              />\n            ) : (\n              <div className=\"messages\">\n                <ScrollableChat messages={messages} />\n              </div>\n            )}\n\n            <FormControl\n              onKeyDown={sendMessage}\n              id=\"first-name\"\n              isRequired\n              mt={3}\n            >\n              {istyping ? (\n                <div>\n                  <Lottie\n                    options={defaultOptions}\n                    // height={50}\n                    width={70}\n                    style={{ marginBottom: 15, marginLeft: 0 }}\n                  />\n                </div>\n              ) : (\n                <></>\n              )}\n              <Input\n                variant=\"filled\"\n                bg=\"#E0E0E0\"\n                placeholder=\"Enter a message..\"\n                value={newMessage}\n                onChange={typingHandler}\n              />\n            </FormControl>\n          </Box>\n        </>\n      ) : (\n        // to get socket.io on same page\n        <Box d=\"flex\" alignItems=\"center\" justifyContent=\"center\" h=\"100%\">\n          <Text fontSize=\"3xl\" pb={3} fontFamily=\"Work sans\">\n            Click on a user to start chatting\n          </Text>\n        </Box>\n      )}\n    </>\n  );\n};\n\nexport default SingleChat;\n","export const isSameSenderMargin = (messages, m, i, userId) => {\n  // console.log(i === messages.length - 1);\n\n  if (\n    i < messages.length - 1 &&\n    messages[i + 1].sender._id === m.sender._id &&\n    messages[i].sender._id !== userId\n  )\n    return 33;\n  else if (\n    (i < messages.length - 1 &&\n      messages[i + 1].sender._id !== m.sender._id &&\n      messages[i].sender._id !== userId) ||\n    (i === messages.length - 1 && messages[i].sender._id !== userId)\n  )\n    return 0;\n  else return \"auto\";\n};\n\nexport const isSameSender = (messages, m, i, userId) => {\n  return (\n    i < messages.length - 1 &&\n    (messages[i + 1].sender._id !== m.sender._id ||\n      messages[i + 1].sender._id === undefined) &&\n    messages[i].sender._id !== userId\n  );\n};\n\nexport const isLastMessage = (messages, i, userId) => {\n  return (\n    i === messages.length - 1 &&\n    messages[messages.length - 1].sender._id !== userId &&\n    messages[messages.length - 1].sender._id\n  );\n};\n\nexport const isSameUser = (messages, m, i) => {\n  return i > 0 && messages[i - 1].sender._id === m.sender._id;\n};\n\nexport const getSender = (loggedUser, users) => {\n  return users[0]?._id === loggedUser?._id ? users[1].name : users[0].name;\n};\n\nexport const getSenderFull = (loggedUser, users) => {\n  return users[0]._id === loggedUser._id ? users[1] : users[0];\n};\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  IconButton,\n  Text,\n  Image,\n} from \"@chakra-ui/react\";\n\nconst ProfileModal = ({ user, children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n\n  return (\n    <>\n      {children ? (\n        <span onClick={onOpen}>{children}</span>\n      ) : (\n        <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n      )}\n      <Modal size=\"lg\" onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent h=\"410px\">\n          <ModalHeader\n            fontSize=\"40px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {user.name}\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody\n            d=\"flex\"\n            flexDir=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n          >\n            <Image\n              borderRadius=\"full\"\n              boxSize=\"150px\"\n              src={user.pic}\n              alt={user.name}\n            />\n            <Text\n              fontSize={{ base: \"28px\", md: \"30px\" }}\n              fontFamily=\"Work sans\"\n            >\n              Email: {user.email}\n            </Text>\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={onClose}>Close</Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default ProfileModal;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport ScrollableFeed from \"react-scrollable-feed\";\nimport {\n  isLastMessage,\n  isSameSender,\n  isSameSenderMargin,\n  isSameUser,\n} from \"../config/ChatLogics\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst ScrollableChat = ({ messages }) => {\n  const { user } = ChatState();\n\n  return (\n    <ScrollableFeed>\n      {messages &&\n        messages.map((m, i) => (\n          <div style={{ display: \"flex\" }} key={m._id}>\n            {(isSameSender(messages, m, i, user._id) ||\n              isLastMessage(messages, i, user._id)) && (\n              <Tooltip label={m.sender.name} placement=\"bottom-start\" hasArrow>\n                <Avatar\n                  mt=\"7px\"\n                  mr={1}\n                  size=\"sm\"\n                  cursor=\"pointer\"\n                  name={m.sender.name}\n                  src={m.sender.pic}\n                />\n              </Tooltip>\n            )}\n            <span\n              style={{\n                backgroundColor: `${\n                  m.sender._id === user._id ? \"#BEE3F8\" : \"#B9F5D0\"\n                }`,\n                marginLeft: isSameSenderMargin(messages, m, i, user._id),\n                marginTop: isSameUser(messages, m, i, user._id) ? 3 : 10,\n                borderRadius: \"20px\",\n                padding: \"5px 15px\",\n                maxWidth: \"75%\",\n              }}\n            >\n              {m.content}\n            </span>\n          </div>\n        ))}\n    </ScrollableFeed>\n  );\n};\n\nexport default ScrollableChat;\n","import { CloseIcon } from \"@chakra-ui/icons\";\nimport { Badge } from \"@chakra-ui/layout\";\n\nconst UserBadgeItem = ({ user, handleFunction, admin }) => {\n  return (\n    <Badge\n      px={2}\n      py={1}\n      borderRadius=\"lg\"\n      m={1}\n      mb={2}\n      variant=\"solid\"\n      fontSize={12}\n      colorScheme=\"purple\"\n      cursor=\"pointer\"\n      onClick={handleFunction}\n    >\n      {user.name}\n      {admin === user._id && <span> (Admin)</span>}\n      <CloseIcon pl={1} />\n    </Badge>\n  );\n};\n\nexport default UserBadgeItem;\n","import { Avatar } from \"@chakra-ui/avatar\";\nimport { Box, Text } from \"@chakra-ui/layout\";\n\n\nconst UserListItem = ({ user, handleFunction }) => {\n \n\n  return (\n    <Box\n      onClick={handleFunction}\n      cursor=\"pointer\"\n      bg=\"#E8E8E8\"\n      _hover={{\n        background: \"#38B2AC\",\n        color: \"white\",\n      }}\n      w=\"100%\"\n      d=\"flex\"\n      alignItems=\"center\"\n      color=\"black\"\n      px={3}\n      py={2}\n      mb={2}\n      borderRadius=\"lg\"\n    >\n      <Avatar\n        mr={2}\n        size=\"sm\"\n        cursor=\"pointer\"\n        name={user.name}\n        src={user.pic}\n      />\n      <Box>\n        <Text>{user.name}</Text>\n        <Text fontSize=\"xs\">\n          <b>Email : </b>\n          {user.email}\n        </Text>\n      </Box>\n    </Box>\n  );\n};\n\nexport default UserListItem;\n","import { ViewIcon } from \"@chakra-ui/icons\";\nimport {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n  IconButton,\n  Spinner,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst UpdateGroupChatModal = ({ fetchMessages, fetchAgain, setFetchAgain }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [renameloading, setRenameLoading] = useState(false);\n  const toast = useToast();\n\n  const { selectedChat, setSelectedChat, user } = ChatState();\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n      setLoading(false);\n    }\n  };\n\n  const handleRename = async () => {\n    if (!groupChatName) return;\n\n    try {\n      setRenameLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/rename`,\n        {\n          chatId: selectedChat._id,\n          chatName: groupChatName,\n        },\n        config\n      );\n\n      console.log(data._id);\n      // setSelectedChat(\"\");\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setRenameLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setRenameLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleAddUser = async (user1) => {\n    if (selectedChat.users.find((u) => u._id === user1._id)) {\n      toast({\n        title: \"User Already in group!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    if (selectedChat.groupAdmin._id !== user._id) {\n      toast({\n        title: \"Only admins can add someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupadd`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  const handleRemove = async (user1) => {\n    if (selectedChat.groupAdmin._id !== user._id && user1._id !== user._id) {\n      toast({\n        title: \"Only admins can remove someone!\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `/api/chat/groupremove`,\n        {\n          chatId: selectedChat._id,\n          userId: user1._id,\n        },\n        config\n      );\n\n      user1._id === user._id ? setSelectedChat() : setSelectedChat(data);\n      setFetchAgain(!fetchAgain);\n      fetchMessages();\n      setLoading(false);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: error.response.data.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n      setLoading(false);\n    }\n    setGroupChatName(\"\");\n  };\n\n  return (\n    <>\n      <IconButton d={{ base: \"flex\" }} icon={<ViewIcon />} onClick={onOpen} />\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            {selectedChat.chatName}\n          </ModalHeader>\n\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\" pb={3}>\n              {selectedChat.users.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  admin={selectedChat.groupAdmin}\n                  handleFunction={() => handleRemove(u)}\n                />\n              ))}\n            </Box>\n            <FormControl d=\"flex\">\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                value={groupChatName}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n              <Button\n                variant=\"solid\"\n                colorScheme=\"teal\"\n                ml={1}\n                isLoading={renameloading}\n                onClick={handleRename}\n              >\n                Update\n              </Button>\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add User to group\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n\n            {loading ? (\n              <Spinner size=\"lg\" />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => handleAddUser(user)}\n                />\n              ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={() => handleRemove(user)} colorScheme=\"red\">\n              Leave Group\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default UpdateGroupChatModal;\n","import { Box } from \"@chakra-ui/layout\";\nimport \"./styles.css\";\nimport SingleChat from \"./SingleChat\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatbox = ({ fetchAgain, setFetchAgain }) => {\n  const { selectedChat } = ChatState();\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"flex\" : \"none\", md: \"flex\" }}\n      alignItems=\"center\"\n      flexDir=\"column\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"68%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <SingleChat fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n    </Box>\n  );\n};\n\nexport default Chatbox;\n","import { Stack } from \"@chakra-ui/layout\";\nimport { Skeleton } from \"@chakra-ui/skeleton\";\n\nconst ChatLoading = () => {\n  return (\n    <Stack>\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n      <Skeleton height=\"45px\" />\n    </Stack>\n  );\n};\n\nexport default ChatLoading;\n","import {\n  Modal,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  ModalCloseButton,\n  Button,\n  useDisclosure,\n  FormControl,\n  Input,\n  useToast,\n  Box,\n} from \"@chakra-ui/react\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { ChatState } from \"../../Context/ChatProvider\";\nimport UserBadgeItem from \"../userAvatar/UserBadgeItem\";\nimport UserListItem from \"../userAvatar/UserListItem\";\n\nconst GroupChatModal = ({ children }) => {\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const [groupChatName, setGroupChatName] = useState();\n  const [selectedUsers, setSelectedUsers] = useState([]);\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const toast = useToast();\n\n  const { user, chats, setChats } = ChatState();\n\n  const handleGroup = (userToAdd) => {\n    if (selectedUsers.includes(userToAdd)) {\n      toast({\n        title: \"User already added\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    setSelectedUsers([...selectedUsers, userToAdd]);\n  };\n\n  const handleSearch = async (query) => {\n    setSearch(query);\n    if (!query) {\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n      console.log(data);\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const handleDelete = (delUser) => {\n    setSelectedUsers(selectedUsers.filter((sel) => sel._id !== delUser._id));\n  };\n\n  const handleSubmit = async () => {\n    if (!groupChatName || !selectedUsers) {\n      toast({\n        title: \"Please fill all the feilds\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top\",\n      });\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `/api/chat/group`,\n        {\n          name: groupChatName,\n          users: JSON.stringify(selectedUsers.map((u) => u._id)),\n        },\n        config\n      );\n      setChats([data, ...chats]);\n      onClose();\n      toast({\n        title: \"New Group Chat Created!\",\n        status: \"success\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    } catch (error) {\n      toast({\n        title: \"Failed to Create the Chat!\",\n        description: error.response.data,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <span onClick={onOpen}>{children}</span>\n\n      <Modal onClose={onClose} isOpen={isOpen} isCentered>\n        <ModalOverlay />\n        <ModalContent>\n          <ModalHeader\n            fontSize=\"35px\"\n            fontFamily=\"Work sans\"\n            d=\"flex\"\n            justifyContent=\"center\"\n          >\n            Create Group Chat\n          </ModalHeader>\n          <ModalCloseButton />\n          <ModalBody d=\"flex\" flexDir=\"column\" alignItems=\"center\">\n            <FormControl>\n              <Input\n                placeholder=\"Chat Name\"\n                mb={3}\n                onChange={(e) => setGroupChatName(e.target.value)}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                placeholder=\"Add Users eg: John, Piyush, Jane\"\n                mb={1}\n                onChange={(e) => handleSearch(e.target.value)}\n              />\n            </FormControl>\n            <Box w=\"100%\" d=\"flex\" flexWrap=\"wrap\">\n              {selectedUsers.map((u) => (\n                <UserBadgeItem\n                  key={u._id}\n                  user={u}\n                  handleFunction={() => handleDelete(u)}\n                />\n              ))}\n            </Box>\n            {loading ? (\n              // <ChatLoading />\n              <div>Loading...</div>\n            ) : (\n              searchResult\n                ?.slice(0, 4)\n                .map((user) => (\n                  <UserListItem\n                    key={user._id}\n                    user={user}\n                    handleFunction={() => handleGroup(user)}\n                  />\n                ))\n            )}\n          </ModalBody>\n          <ModalFooter>\n            <Button onClick={handleSubmit} colorScheme=\"blue\">\n              Create Chat\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n    </>\n  );\n};\n\nexport default GroupChatModal;\n","import { AddIcon } from \"@chakra-ui/icons\";\nimport { Box, Stack, Text } from \"@chakra-ui/layout\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { getSender } from \"../config/ChatLogics\";\nimport ChatLoading from \"./ChatLoading\";\nimport GroupChatModal from \"./miscellaneous/GroupChatModal\";\nimport { Button } from \"@chakra-ui/react\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst MyChats = ({ fetchAgain }) => {\n  const [loggedUser, setLoggedUser] = useState();\n\n  const { selectedChat, setSelectedChat, user, chats, setChats } = ChatState();\n\n  const toast = useToast();\n\n  const fetchChats = async () => {\n    // console.log(user._id);\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(\"/api/chat\", config);\n      setChats(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the chats\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  useEffect(() => {\n    setLoggedUser(JSON.parse(localStorage.getItem(\"userInfo\")));\n    fetchChats();\n    // eslint-disable-next-line\n  }, [fetchAgain]);\n\n  return (\n    <Box\n      d={{ base: selectedChat ? \"none\" : \"flex\", md: \"flex\" }}\n      flexDir=\"column\"\n      alignItems=\"center\"\n      p={3}\n      bg=\"white\"\n      w={{ base: \"100%\", md: \"31%\" }}\n      borderRadius=\"lg\"\n      borderWidth=\"1px\"\n    >\n      <Box\n        pb={3}\n        px={3}\n        fontSize={{ base: \"28px\", md: \"30px\" }}\n        fontFamily=\"Work sans\"\n        d=\"flex\"\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n      >\n        My Chats\n        <GroupChatModal>\n          <Button\n            d=\"flex\"\n            fontSize={{ base: \"17px\", md: \"10px\", lg: \"17px\" }}\n            rightIcon={<AddIcon />}\n          >\n            New Group Chat\n          </Button>\n        </GroupChatModal>\n      </Box>\n      <Box\n        d=\"flex\"\n        flexDir=\"column\"\n        p={3}\n        bg=\"#F8F8F8\"\n        w=\"100%\"\n        h=\"100%\"\n        borderRadius=\"lg\"\n        overflowY=\"hidden\"\n      >\n        {chats ? (\n          <Stack overflowY=\"scroll\">\n            {chats.map((chat) => (\n              <Box\n                onClick={() => setSelectedChat(chat)}\n                cursor=\"pointer\"\n                bg={selectedChat === chat ? \"#38B2AC\" : \"#E8E8E8\"}\n                color={selectedChat === chat ? \"white\" : \"black\"}\n                px={3}\n                py={2}\n                borderRadius=\"lg\"\n                key={chat._id}\n              >\n                <Text>\n                  {!chat.isGroupChat\n                    ? getSender(loggedUser, chat.users)\n                    : chat.chatName}\n                </Text>\n                {chat.latestMessage && (\n                  <Text fontSize=\"xs\">\n                    <b>{chat.latestMessage.sender.name} : </b>\n                    {chat.latestMessage.content.length > 50\n                      ? chat.latestMessage.content.substring(0, 51) + \"...\"\n                      : chat.latestMessage.content}\n                  </Text>\n                )}\n              </Box>\n            ))}\n          </Stack>\n        ) : (\n          <ChatLoading />\n        )}\n      </Box>\n    </Box>\n  );\n};\n\nexport default MyChats;\n","import { Button } from \"@chakra-ui/button\";\nimport { useDisclosure } from \"@chakra-ui/hooks\";\nimport { Input } from \"@chakra-ui/input\";\nimport { Box, Text } from \"@chakra-ui/layout\";\nimport {\n  Menu,\n  MenuButton,\n  MenuDivider,\n  MenuItem,\n  MenuList,\n} from \"@chakra-ui/menu\";\nimport {\n  Drawer,\n  DrawerBody,\n  DrawerContent,\n  DrawerHeader,\n  DrawerOverlay,\n} from \"@chakra-ui/modal\";\nimport { Tooltip } from \"@chakra-ui/tooltip\";\nimport { BellIcon, ChevronDownIcon } from \"@chakra-ui/icons\";\nimport { Avatar } from \"@chakra-ui/avatar\";\nimport { useHistory } from \"react-router-dom\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useToast } from \"@chakra-ui/toast\";\nimport ChatLoading from \"../ChatLoading\";\nimport { Spinner } from \"@chakra-ui/spinner\";\nimport ProfileModal from \"./ProfileModal\";\nimport NotificationBadge from \"react-notification-badge\";\nimport { Effect } from \"react-notification-badge\";\nimport { getSender } from \"../../config/ChatLogics\";\nimport UserListItem from \"../userAvatar/UserListItem\";\nimport { ChatState } from \"../../Context/ChatProvider\";\n\nfunction SideDrawer() {\n  const [search, setSearch] = useState(\"\");\n  const [searchResult, setSearchResult] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [loadingChat, setLoadingChat] = useState(false);\n\n  const {\n    setSelectedChat,\n    user,\n    notification,\n    setNotification,\n    chats,\n    setChats,\n  } = ChatState();\n\n  const toast = useToast();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const history = useHistory();\n\n  const logoutHandler = () => {\n    localStorage.removeItem(\"userInfo\");\n    history.push(\"/\");\n  };\n\n  const handleSearch = async () => {\n    if (!search) {\n      toast({\n        title: \"Please Enter something in search\",\n        status: \"warning\",\n        duration: 5000,\n        isClosable: true,\n        position: \"top-left\",\n      });\n      return;\n    }\n\n    try {\n      setLoading(true);\n\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n\n      const { data } = await axios.get(`/api/user?search=${search}`, config);\n\n      setLoading(false);\n      setSearchResult(data);\n    } catch (error) {\n      toast({\n        title: \"Error Occured!\",\n        description: \"Failed to Load the Search Results\",\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  const accessChat = async (userId) => {\n    console.log(userId);\n\n    try {\n      setLoadingChat(true);\n      const config = {\n        headers: {\n          \"Content-type\": \"application/json\",\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(`/api/chat`, { userId }, config);\n\n      if (!chats.find((c) => c._id === data._id)) setChats([data, ...chats]);\n      setSelectedChat(data);\n      setLoadingChat(false);\n      onClose();\n    } catch (error) {\n      toast({\n        title: \"Error fetching the chat\",\n        description: error.message,\n        status: \"error\",\n        duration: 5000,\n        isClosable: true,\n        position: \"bottom-left\",\n      });\n    }\n  };\n\n  return (\n    <>\n      <Box\n        d=\"flex\"\n        justifyContent=\"space-between\"\n        alignItems=\"center\"\n        bg=\"white\"\n        w=\"100%\"\n        p=\"5px 10px 5px 10px\"\n        borderWidth=\"5px\"\n      >\n        <Tooltip label=\"Search Users to chat\" hasArrow placement=\"bottom-end\">\n          <Button variant=\"ghost\" onClick={onOpen}>\n            <i className=\"fas fa-search\"></i>\n            <Text d={{ base: \"none\", md: \"flex\" }} px={4}>\n              Search User\n            </Text>\n          </Button>\n        </Tooltip>\n        <Text fontSize=\"2xl\" fontFamily=\"Work sans\">\n          Connectify\n        </Text>\n        <div>\n          <Menu>\n            <MenuButton p={1}>\n              <NotificationBadge\n                count={notification.length}\n                effect={Effect.SCALE}\n              />\n              <BellIcon fontSize=\"2xl\" m={1} />\n            </MenuButton>\n            <MenuList pl={2}>\n              {!notification.length && \"No New Messages\"}\n              {notification.map((notif) => (\n                <MenuItem\n                  key={notif._id}\n                  onClick={() => {\n                    setSelectedChat(notif.chat);\n                    setNotification(notification.filter((n) => n !== notif));\n                  }}\n                >\n                  {notif.chat.isGroupChat\n                    ? `New Message in ${notif.chat.chatName}`\n                    : `New Message from ${getSender(user, notif.chat.users)}`}\n                </MenuItem>\n              ))}\n            </MenuList>\n          </Menu>\n          <Menu>\n            <MenuButton as={Button} bg=\"white\" rightIcon={<ChevronDownIcon />}>\n              <Avatar\n                size=\"sm\"\n                cursor=\"pointer\"\n                name={user.name}\n                src={user.pic}\n              />\n            </MenuButton>\n            <MenuList>\n              <ProfileModal user={user}>\n                <MenuItem>My Profile</MenuItem>{\" \"}\n              </ProfileModal>\n              <MenuDivider />\n              <MenuItem onClick={logoutHandler}>Logout</MenuItem>\n            </MenuList>\n          </Menu>\n        </div>\n      </Box>\n\n      <Drawer placement=\"left\" onClose={onClose} isOpen={isOpen}>\n        <DrawerOverlay />\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"1px\">Search Users</DrawerHeader>\n          <DrawerBody>\n            <Box d=\"flex\" pb={2}>\n              <Input\n                placeholder=\"Search by name or email\"\n                mr={2}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              />\n              <Button onClick={handleSearch}>Go</Button>\n            </Box>\n            {loading ? (\n              <ChatLoading />\n            ) : (\n              searchResult?.map((user) => (\n                <UserListItem\n                  key={user._id}\n                  user={user}\n                  handleFunction={() => accessChat(user._id)}\n                />\n              ))\n            )}\n            {loadingChat && <Spinner ml=\"auto\" d=\"flex\" />}\n          </DrawerBody>\n        </DrawerContent>\n      </Drawer>\n    </>\n  );\n}\n\nexport default SideDrawer;\n","import { Box } from \"@chakra-ui/layout\";\nimport { useState } from \"react\";\nimport Chatbox from \"../components/Chatbox\";\nimport MyChats from \"../components/MyChats\";\nimport SideDrawer from \"../components/miscellaneous/SideDrawer\";\nimport { ChatState } from \"../Context/ChatProvider\";\n\nconst Chatpage = () => {\n  const [fetchAgain, setFetchAgain] = useState(false);\n  const { user } = ChatState();\n\n  return (\n    <div style={{ width: \"100%\" }}>\n      {user && <SideDrawer />}\n      <Box d=\"flex\" justifyContent=\"space-between\" w=\"100%\" h=\"91.5vh\" p=\"10px\">\n        {user && <MyChats fetchAgain={fetchAgain} />}\n        {user && (\n          <Chatbox fetchAgain={fetchAgain} setFetchAgain={setFetchAgain} />\n        )}\n      </Box>\n    </div>\n  );\n};\n\nexport default Chatpage;\n","import \"./App.css\";\nimport Homepage from \"./Pages/Homepage\";\nimport { Route } from \"react-router-dom\";\nimport Chatpage from \"./Pages/Chatpage\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route path=\"/\" component={Homepage} exact />\n      <Route path=\"/chats\" component={Chatpage} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport ChatProvider from \"./Context/ChatProvider\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <ChakraProvider>\n    <BrowserRouter>\n      <ChatProvider>\n        <App />\n      </ChatProvider>\n    </BrowserRouter>\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}